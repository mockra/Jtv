{"name":"Jtv","body":"# Jtv\r\n\r\nThis gem allows you to quickly add Justin.TV integration to your Ruby applications. Jtv is a useful tool for providing a list of livestreams, as well as embedding Justin.TV streams and clips.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'jtv'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install jtv\r\n\r\n## Justin.TV API Keys\r\n\r\nIf you want access to higher rate limits for your application, then you\r\nneed to sign up for a [Justin.TV developer account](http://www.justin.tv/developer/activate).\r\n\r\nOnce you have your API Keys, you'll need to set them up as environment\r\nvariables for them to work with this gem. A great article on environment\r\nvariables can be found at [Heroku](https://devcenter.heroku.com/articles/config-vars).\r\n\r\n``` ruby\r\nENV['JTV_CONSUMER_KEY']\r\nENV['JTV_CONSUMER_SECRET']\r\n```\r\n\r\n## Usage\r\n\r\nThe Jtv gem offers various classes depending on the type of information\r\nyou're looking for. Check out the [RDOC](http://rubydoc.info/github/Mockra/Jtv/).\r\n\r\n### JtvChannel\r\nThe JtvChannel class provides access to stream information for a\r\nspecific channel. You'll need to pass the channel handle when you\r\ninitialize your object.\r\n\r\n```ruby\r\nchannel = JtvChannel.new( 'channel' )\r\n```\r\n\r\nYou'll then have access to the following information.\r\n\r\n```ruby\r\nchannel.viewers\r\n# Number of current viewers on the stream, requires a second API call\r\n\r\nchannel.image_huge\r\n# 320x240 Image URL\r\n\r\nchannel.screen_cap_huge\r\n# 320x240 Screen Capture URL\r\n\r\nchannel.id\r\n# The channel handle\r\n\r\nchannel.embed\r\n#Code required to embed the Justin.TV Player, response looks like:\r\n```\r\n\r\n```\r\n<object type=\"application/x-shockwave-flash\" height=\"295\" width=\"353\" id=\"jtv_player_flash\" data=\"http://www.justin.tv/widgets/jtv_player.swf?channel=apidemo&quot; bgcolor=\"#000000\"><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowscriptaccess\" value=\"always\" /><param name=\"movie\" value=\"http://www.justin.tv/widgets/jtv_player.swf&quot; /><param name=\"flashvars\" value=\"channel=apidemo&auto_play=false&start_volume=25\" /></object>\r\n```\r\n\r\n```ruby\r\nchannel.title\r\nchannel.url\r\nchannel.about\r\nchannel.description\r\n```\r\n\r\n### JtvClip\r\nThe JtvClip class provides access to specific clip information. To\r\ncreate a clip object, simply pass the clip id when you initialize the\r\nobject.\r\n\r\n```ruby\r\nclip = JtvClip.new( 1278312 )\r\n```\r\n\r\nThe following method calls are available through the Clip class.\r\n\r\n```ruby\r\nclip.description\r\nclip.title\r\nclip.id\r\nclip.tags\r\nclip.embed\r\nclip.image_huge\r\nclip.length\r\nclip.created_on\r\n```\r\n\r\n## Contributing\r\n\r\nContributions and feedback are more than welcome and highly encouraged.\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Contact\r\n\r\n[david@mockra.com](mailto:david@mockra.com)\r\n\r\n[@Mockra_](http://twitter.com/#!/mockra_)\r\n\r\n[mockra.com](http://mockra.com)\r\n","tagline":"Justin.TV API Gem","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}